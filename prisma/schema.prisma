// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String    @db.VarChar(260)
  email        String    @unique @db.VarChar(260)
  password     String    @db.VarChar(260)
  gender       String?   @db.VarChar(260) 
  address      String?   @db.VarChar(260) 
  profilepic   String?   @db.VarChar(260) 
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  products     Product[]
  order_detail Order_detail[]
}

model Product {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(260)
  description  String
  category     String   @default("Dog") 
  condition    String 
  price        Float 
  stock        Int      @default(0)
  userId       Int   
  user         User     @relation(fields: [userId], references: [id])
  images       Image[]
  order_item   Order_item[]

  @@index([userId])
}

model Image {
  id          Int      @id @default(autoincrement())
  url         String   @db.VarChar(260)
  productId   Int
  product     Product  @relation(fields: [productId], references: [id])

  @@index([productId])
}

model Payment {
  id              Int       @id @default(autoincrement())
  createdAt       DateTime  @default(now())
  amount          Int     
  status          String    @default("pending")
  order_detail_Id Int
  order_detail    Order_detail   @relation(fields: [order_detail_Id], references: [id])
  @@index([order_detail_Id])
}

model Order_detail {
  id                Int          @id @default(autoincrement())
  createdAt         DateTime     @default(now())
  shipping_address  String       @db.VarChar(260) 
  contact_number    String       @db.VarChar(260) 
  receiver          String       @db.VarChar(260) 
  userId            Int   
  user              User         @relation(fields: [userId], references: [id])
  payment           Payment[]    
  order_item        Order_item[]
  status            String       @default("pending")

  @@index([userId])
}


model Order_item {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  quantity      Int
  productId     Int
  product       Product  @relation(fields: [productId], references: [id])
  order_detail_Id       Int
  order_detail         Order_detail   @relation(fields: [order_detail_Id], references: [id])

  @@index([productId])
  @@index([order_detail_Id])
}